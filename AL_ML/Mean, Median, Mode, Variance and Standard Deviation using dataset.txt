Python offers a robust statistics library that provides functions for calculating various statistical measures. This library is particularly useful for data analysis and machine learning tasks.

Averages and Measures of Central Tendency

Mean: The average value of a dataset.
Median: The middle value when a dataset is sorted.
Mode: The most frequent value in a dataset.
Measures of Spread

Variance: Measures how spread out numbers are.
Standard Deviation: Measures how spread out numbers are from the mean.
Key Points:

The statistics library simplifies the calculation of these measures.
These measures help in understanding the central tendency and dispersion of data.
They are essential tools for data analysis and decision-making.


# Program 1
import statistics

# Calculate average values
print(statistics.mean([1, 3, 5, 7, 9, 11, 13]))
print(statistics.mean([1, 3, 5, 7, 9, 11]))
print(statistics.mean([-11, 5.5, 3.4, 7.1, 9, 22]))

# Program 2
import statistics

# Calculate middle values
print(statistics.median([1, 3, 5, 7, 9, 11, 13]))
print(statistics.median([1, 3, 5, 7, 9, 11]))
print(statistics.median([-11, 5.5, -3.4, 7.1, 9, 22]))

# Program 3
import statistics

# Calculate the mode
print(statistics.mode([1, 3, 3, 3, 5, 7, 7, 9, 11]))
print(statistics.mode([1, 1, 3, 5, 7, 9, 11]))
print(statistics.mode(['red', 'green', 'blue', 'red']))

# Program 4
import statistics

# Calculate the standard deviation from a sample of data
print(statistics.stdev([1, 3, 5, 7, 9, 11]))
print(statistics.stdev([2, 2.5, 1.25, 3.1, 1.75, 2.8]))
print(statistics.stdev([-11, 5.5, -3.4, 7.1]))
print(statistics.stdev([1, 11, 50, 100]))

# Program 5
import statistics

# Calculate the variance from a sample of data
print(statistics.variance([1, 3, 5, 7, 9, 11]))
print(statistics.variance([2, 2.5, 1.25, 3.1, 1.75, 2.8]))
print(statistics.variance([-11, 5.5, -3.4, 7.1]))
print(statistics.variance([1, 11, 50, 100]))